# Copyright 2021-2023 David Robillard <d@drobilla.net>
# SPDX-License-Identifier: 0BSD OR ISC

# Project information
project = "Exess"
copyright = "2021-2023, David Robillard"
author = "David Robillard"
release = "@EXESS_VERSION@"
version = "@EXESS_VERSION@"
desc = "A simple library for reading and writing XSD datatypes"

# General configuration
exclude_patterns = ["xml"]
language = "en"
nitpicky = True
pygments_style = "friendly"

# Try to import LV2 theme module
try:
    import sphinx_lv2_theme

    have_lv2_theme = True
except ModuleNotFoundError:
    have_lv2_theme = False

# Ignore everything opaque or external for nitpicky mode
_opaque = [
    "int16_t",
    "int32_t",
    "int64_t",
    "int8_t",
    "size_t",
    "uint16_t",
    "uint32_t",
    "uint64_t",
    "uint8_t",
]

nitpick_ignore = list(map(lambda x: ("c:identifier", x), _opaque))

# HTML output

html_copy_source = False
html_secnumber_suffix = " "
html_short_title = "@EXESS_TITLE@"
html_static_path = ["@EXESS_STATIC_PATH@"]

html_theme_options = {
    "description": desc,
    "logo_name": True,
}

if tags.has("singlehtml"):
    html_sidebars = {"**": ["globaltoc.html"]}
    html_theme_options.update(
        {
            "globaltoc_collapse": False,
            "globaltoc_maxdepth": 3,
            "nosidebar": False,
            "page_width": "80em",
        }
    )
else:
    html_theme_options.update(
        {
            "globaltoc_collapse": True,
            "globaltoc_maxdepth": 1,
            "nosidebar": True,
            "page_width": "60em",
        }
    )

if have_lv2_theme:
    html_theme = "sphinx_lv2_theme"

    html_theme_options.update(
        {
            "show_footer_version": True,
            "show_logo_version": True,
        }
    )

    if tags.has("singlehtml"):
        html_theme_options.update(
            {
                "body_max_width": "60em",
                "body_min_width": "60em",
                "sidebar_width": "16em",
            }
        )
    else:
        html_theme_options.update(
            {
                "body_max_width": "60em",
                "body_min_width": "40em",
            }
        )

else:
    html_theme = "alabaster"

    if tags.has("singlehtml"):
        html_theme_options.update(
            {
                "body_max_width": "48em",
                "body_min_width": "48em",
                "sidebar_width": "18em",
            }
        )
    else:
        html_theme_options.update(
            {
                "body_max_width": "60em",
                "body_min_width": "40em",
                "show_relbars": True,
            }
        )

# EPub output

epub_show_urls = "no"
epub_description = "Exess, a library for reading and writing XSD datatypes."
epub_title = "Exess @EXESS_VERSION@ Documentation"
epub_basename = "Exess-@EXESS_VERSION@"
epub_css_files = ["epubstyle.css"]

# Man page output

groups = {
    "symbols": "Preprocessor Symbols",
    "status": "Status",
    "decimal": "Decimal Strings",
    "double": "Double Strings",
    "float": "Float Strings",
    "boolean": "Boolean Strings",
    "long": "Long Strings",
    "int": "Int Strings",
    "short": "Short Strings",
    "byte": "Byte Strings",
    "ulong": "Unsigned Long Strings",
    "uint": "Unsigned Int Strings",
    "ushort": "Unsigned Short Strings",
    "ubyte": "Unsigned Byte Strings",
    "duration": "Duration Strings",
    "datetime": "Datetime Strings",
    "timezone": "Timezone Strings",
    "date": "Date Strings",
    "time": "Time Strings",
    "base64": "Base64 Binary Strings",
    "hex": "Hex Binary Strings",
    "datatypes": "Datatypes",
    "canon": "Canonical Form",
    "value": "Generic Values",
}

man_author = "David Robillard <d@drobilla.net>"
man_pages = [("index", "exess", "Exess", man_author, 3)]

for group, title in groups.items():
    name = "exess_" + group
    man_pages += [("api/" + name, name, title, man_author, 3)]
